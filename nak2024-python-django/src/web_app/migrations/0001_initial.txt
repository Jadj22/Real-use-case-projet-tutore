# Generated by Django 5.1.1 on 2025-01-30 00:16

import django.db.models.deletion
import web_app.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('idadmin', models.AutoField(primary_key=True, serialize=False)),
                ('privileges', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('idannonce', models.AutoField(primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('categorie', models.CharField(blank=True, max_length=100, null=True)),
                ('prix', models.FloatField()),
                ('photos', models.TextField(blank=True, null=True)),
                ('datepublication', models.DateField(blank=True, null=True)),
                ('statut', models.CharField(blank=True, max_length=50, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
                ('stockproduit', models.TextField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'annonce',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cartinteractive',
            fields=[
                ('idcart', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cartinteractive',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('idclient', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vendeur',
            fields=[
                ('idvendeur', models.AutoField(primary_key=True, serialize=False)),
                ('nom_boutique', models.CharField(blank=True, max_length=255, null=True)),
                ('adresse_boutique', models.TextField(blank=True, null=True)),
                ('statut_boutique', models.CharField(blank=True, max_length=50, null=True)),
                ('type_vendeur', models.CharField(blank=True, max_length=50, null=True)),
                ('horaires', models.TextField(blank=True, null=True)),
                ('evaluation', models.FloatField(blank=True, null=True)),
                ('produits', models.TextField(blank=True, null=True)),
                ('categorie', models.CharField(blank=True, max_length=100, null=True)),
                ('imagesproduits', models.TextField(blank=True, null=True)),
                ('enligne', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vendeur',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Favoris',
            fields=[
                ('idclient', models.OneToOneField(db_column='idclient', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='web_app.client')),
                ('dateajout', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'favoris',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Historique',
            fields=[
                ('idclient', models.OneToOneField(db_column='idclient', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='web_app.client')),
                ('dateconsultation', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'historique',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('idutilisateur', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('photoprofil', models.ImageField(blank=True, null=True, upload_to=web_app.models.ProfilePathGenerator())),
                ('dateinscription', models.DateField(auto_now_add=True)),
                ('localisation', models.JSONField(blank=True, null=True)),
                ('numtelephone', models.CharField(blank=True, max_length=20, null=True)),
                ('statutconnexion', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'utilisateur',
            },
        ),
    ]
